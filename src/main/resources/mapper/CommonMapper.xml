<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.douzone.mapper.master">

    <!--    쇼핑 카트 들어갔을때-->
    <select id="getShoppingCart" resultType="com.douzone.final_backend.DTO.ShoppingCartDTO">
        select g_code,
               g_count,
               g_name,
               g_status,
               g_price,
               g_discount,
               g_image,
               o_name
        from goods
                 left join owner o on goods.g_owner = o.o_sNumber
        where g_code = #{g_code};
    </select>

    <!--    가게 리스트 페이지-->
    <!--    <select id="getShopList" resultType="com.douzone.final_backend.DTO.ShopListDTO">-->
    <!--        <![CDATA[-->
    <!--        SELECT o_sNumber-->
    <!--             , o_phone-->
    <!--             , o_cellPhone-->
    <!--             , o_name-->
    <!--             , o_address-->
    <!--             , o_latitude-->
    <!--             , o_longitude-->
    <!--             , o_time1-->
    <!--             , o_time2-->
    <!--             , o_image-->
    <!--             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)-->
    <!--            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))-->
    <!--            AS distance-->
    <!--        FROM owner-->

    <!--        where o_approval in (1,3)-->

    <!--        HAVING distance <= #{radius}-->

    <!--        ORDER BY distance-->

    <!--        LIMIT #{startIndex},10;-->
    <!--        ]]>-->
    <!--    </select>-->

    <select id="getShopList1" resultType="com.douzone.final_backend.DTO.ShopListDTO">
        <![CDATA[
        SELECT o_sNumber
             , o_phone
             , o_cellPhone
             , o_name
             , o_address
             , o_latitude
             , o_longitude
             , o_time1
             , o_time2
             , o_image
             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)
            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))
                                                                        AS distance
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                group by g_owner)                                       as 'totalGoodsCnt'
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                  and g_status = 0
                  and g_count != 0
                  and goods.g_name like concat('%', #{goodsName}, '%')) as 'searchResult'
        FROM owner
        where o_approval in (1, 3)

        group by o_sNumber

        HAVING distance <= #{radius}

        ORDER BY distance asc, searchResult desc

        LIMIT #{startIndex},10;
        ]]>
    </select>

    <select id="getShopList2" resultType="com.douzone.final_backend.DTO.ShopListDTO">
        <![CDATA[
        SELECT o_sNumber
             , o_phone
             , o_cellPhone
             , o_name
             , o_address
             , o_latitude
             , o_longitude
             , o_time1
             , o_time2
             , o_image
             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)
            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))
                                                                        AS distance
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                group by g_owner)                                       as 'totalGoodsCnt'
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                  and g_status = 0
                  and g_count != 0
                  and goods.g_name like concat('%', #{goodsName}, '%')) as 'searchResult'
        FROM owner
        where o_approval in (1, 3)

        group by o_sNumber

        HAVING distance <= #{radius}

        ORDER BY distance desc, searchResult desc

        LIMIT #{startIndex},10;
        ]]>
    </select>

    <select id="getShopList3" resultType="com.douzone.final_backend.DTO.ShopListDTO">
        <![CDATA[
        SELECT o_sNumber
             , o_phone
             , o_cellPhone
             , o_name
             , o_address
             , o_latitude
             , o_longitude
             , o_time1
             , o_time2
             , o_image
             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)
            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))
                                                                        AS distance
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                group by g_owner)                                       as 'totalGoodsCnt'
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                  and g_status = 0
                  and g_count != 0
                  and goods.g_name like concat('%', #{goodsName}, '%')) as 'searchResult'
        FROM owner
        where o_approval in (1, 3)

        group by o_sNumber

        HAVING distance <= #{radius}

        ORDER BY searchResult desc

        LIMIT #{startIndex},10;
        ]]>
    </select>

    <select id="getShopList4" resultType="com.douzone.final_backend.DTO.ShopListDTO">
        <![CDATA[
        SELECT o_sNumber
             , o_phone
             , o_cellPhone
             , o_name
             , o_address
             , o_latitude
             , o_longitude
             , o_time1
             , o_time2
             , o_image
             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)
            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))
                                                                        AS distance
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                group by g_owner)                                       as 'totalGoodsCnt'
             , (select count(*)
                from goods
                where o_sNumber = goods.g_owner
                  and g_status = 0
                  and g_count != 0
                  and goods.g_name like concat('%', #{goodsName}, '%')) as 'searchResult'
        FROM owner
        where o_approval in (1, 3)

        group by o_sNumber

        HAVING distance <= #{radius}

        ORDER BY searchResult asc

        LIMIT #{startIndex},10;
        ]]>
    </select>

    <!-- 자기 위치 지정되어 있을 때 근처 가게 4개만 뽑아서 보여주기 -->
    <select id="getLocalList" resultType="com.douzone.final_backend.DTO.ShopListDTO">
<![CDATA[
        SELECT o_sNumber
             , o_phone
             , o_cellPhone
             , o_name
             , o_address
             , o_latitude
             , o_longitude
             , o_time1
             , o_time2
             , o_image
             , (6371 * acos(cos(radians(#{o_latitude})) * cos(radians(o_latitude)) * cos(radians(o_longitude)
            - radians(#{o_longitude})) + sin(radians(#{o_latitude})) * sin(radians(o_latitude))))
            AS distance
        FROM owner
        where o_approval in (1, 3)
        HAVING distance <= #{radius}
        ORDER BY distance
        LIMIT 0,4;
        ]]>
    </select>

    <!--    그 사업자번호가 판매하는 카테고리 별 상품 갯수-->
    <select id="getCategory" resultType="map">
        select count(case when g_category = '가공식품' then 1 end)   as 'gagong',
               count(case when g_category = '신선식품' then 1 end)   as 'fresh',
               count(case when g_category = '마실것' then 1 end)    as 'drink',
               count(case when g_category = '냉동식품' then 1 end)   as 'freeze',
               count(case when g_category = '조리/반조리' then 1 end) as 'cooked',
               count(case when g_category = '식품외 기타' then 1 end) as 'other'
        from goods
        where g_status = 0
          and g_owner = #{g_owner}
          and g_count != 0
    </select>

    <!-- 해당 가게 클릭시 판매중인 상품 리스트 보기-->
    <select id="storeGoodsView" resultType="com.douzone.final_backend.vo.GoodsVO">
        select *
        from goods
        where g_owner = #{o_sNumber}
          and g_status = 0
          and g_count != 0
    </select>

    <select id="recommendList" resultType="com.douzone.final_backend.DTO.RecommendListDTO">
        select g_owner, g_name, g_price, g_discount, g_image, o_name
        from goods
                 join owner o on o.o_sNumber = goods.g_owner
        where g_status = 0
          and g_count != 0
        order by g_register desc
        limit 0,4;
    </select>

    <!-- 해당 아이디와 암호화된 비밀번호랑 일치하는 user 찾기 -->
    <select id="changePWcheck" resultType="com.douzone.final_backend.DTO.UserDTO">
        select *
        from user
        where u_id = #{u_id}
          and u_pw like concat('%', #{u_pw}, '%')
    </select>

    <!-- 비밀번호 업데이트 -->
    <update id="pwUpdate" parameterType="com.douzone.final_backend.vo.UserVO">
        update user
        set u_pw = #{u_pw}
        where u_id = #{u_id}
    </update>

    <select id="SelectRedisUpdate" resultType="com.douzone.final_backend.DTO.ShopListDTO">
        select *
        from owner
        where o_redis_flag is null
    </select>
</mapper>


