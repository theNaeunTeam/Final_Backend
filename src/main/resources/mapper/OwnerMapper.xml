<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.douzone.mapper.owner">
    <select id="findBySNum" resultType="com.douzone.final_backend.Bean.OwnerBean">
        select *
        from owner
        where o_sNumber = #{o_sNumber}
          and o_approval = 1
    </select>

    <select id="existsBySNum" resultType="boolean">
        select count(*)
        from owner
        where o_sNumber = #{o_sNumber}
    </select>

    <insert id="insertOwner" parameterType="com.douzone.final_backend.Bean.OwnerBean">
        insert into owner(o_sNumber, o_pw, o_phone, o_name, o_cellPhone, o_address, o_date, o_time1, o_time2, o_image,
                          o_longitude, o_latitude)
        values (#{o_sNumber}, #{o_pw}, #{o_phone}, #{o_name}, #{o_cellPhone}, #{o_address}, #{o_date}, #{o_time1},
                #{o_time2},
                #{o_image}, #{o_longitude}, #{o_latitude})
    </insert>
    <select id="findByOwner" resultType="com.douzone.final_backend.DTO.OwnerDTO">
        select *
        from owner
        where o_sNumber = #{id}
    </select>

    <insert id="addGoods" parameterType="com.douzone.final_backend.Bean.GoodsBean">
        insert into goods(g_owner, g_name, g_price, g_discount, g_detail, g_image, g_expireDate, g_category)
        values (#{g_owner}, #{g_name}, #{g_price}, #{g_discount}, #{g_detail}, #{g_image}, #{g_expireDate},
                #{g_category})

    </insert>

    <update id="updateGoods" parameterType="com.douzone.final_backend.Bean.GoodsBean">
        update goods
        set g_owner      = #{g_owner},
            g_name       = #{g_name},
            g_price      = #{g_price},
            g_discount   = #{g_discount},
            g_detail     = #{g_detail},
            g_image      = #{g_image},
            g_expireDate = #{g_expireDate},
            g_category   = #{g_category}
        where g_code = #{g_code}
    </update>
    <select id="goodsList" resultType="com.douzone.final_backend.Bean.GoodsBean">
        select *
        from goods
        where g_owner = #{o_sNumber}
    </select>


    <!-- 예약 신청 승인 -->
    <update id="resOK" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update reserve
        set r_status = 1
        where r_code = #{r_code}
    </update>

    <!-- 예약 거절 -->
    <!-- 1. 수량 더하기 -->
    <update id="resNoCount" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update goods
        set g_count = g_count + #{r_count}
        where g_code = #{r_g_code}
    </update>
    <!-- 2. 예약 상태 2 거절로 변경 -->
    <update id="resNo" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update reserve
        set r_status = 2
        where r_code = #{r_code}
    </update>
    <!-- 3. 상품 상태 수량이랑 기존 상태 확인후 판매중0 으로 변경 -->
    <update id="reNoSt" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update goods
        set g_status = if(g_count != 0 and g_status != 2, 0, g_status)
        where g_code = #{r_g_code}
    </update>

    <!-- 판매 완료 r_status = 3 으로 변경-->
    <update id="resSu" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update reserve
        set r_status   = 3,
            r_lastTime = now()
        where r_code = #{r_code}
    </update>
    <update id="point" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update user
        set u_point = u_point + #{r_pay} * 0.1
        where u_id = #{r_u_id}
    </update>

    <!-- 노쇼 -->
    <!-- 1. goods 테이블 수량 다시 더하기 -->
    <!-- 예약 거절꺼 재사용 -->
    <!-- 2. reserve 테이블 status = 4 -->
    <update id="reseNoShowStatus" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update reserve
        set r_status = 4
        where r_code = #{r_code}
    </update>

    <!-- 3. goods 상태 상품수가 0이 아니고 판매 중지 2 된 상품이 아니면 판매중으로 변경 -->
    <!-- 예약 거절꺼 재사용 -->
    <!--    <update id="resNSSt" parameterType="com.douzone.final_backend.DTO.ReserveDTO">-->
    <!--        update goods-->
    <!--        set g_status = if(g_count != 0 and g_status != 2, 0, g_status)-->
    <!--        where g_code = #{r_g_code}-->
    <!--    </update>-->
    <!-- 4. u_id noShow 카운트 1 증가 -->
    <update id="resNoShowCount" parameterType="com.douzone.final_backend.DTO.ReserveDTO">
        update user
        set u_noShowCnt = u_noShowCnt + 1
        where u_id = #{r_u_id}
    </update>
    <!-- 5. 만약 user noshowcount 5이상이면 블랙리스트 -->
    <update id="noShowCheck">
        update user
        set u_status = if(u_noShowCnt >= 5, 2, u_status)
        where u_id = #{r_u_id}
    </update>
    <select id="allGoodsList" resultType="com.douzone.final_backend.Bean.GoodsBean">
        select *
        from goods
    </select>

    <update id="changeStatus" parameterType="int">
        update goods
        set g_status = 2
        where g_code = #{g_code}
    </update>
    <!-- 예약 번호로 예약정보 부르기 -->
    <select id="reserveOne" resultType="com.douzone.final_backend.Bean.ReserveBean">
        select *
        from reserve
        where r_code = #{r_code};
    </select>

    <!-- 상품 판매 중지 신청 -->
    <update id="deleteGoods" parameterType="com.douzone.final_backend.DTO.GoodsDTO">
        update goods
        set g_status = 2
        where g_code = #{g_code}
    </update>

    <!-- 본인 가게 예약 리스트 -->
    <select id="reserveList" resultType="com.douzone.final_backend.Bean.ReserveBean">
        select *
        from reserve
        where r_owner = #{g_owner}
    </select>

    <!-- g_code로 물건 정보 조회 -->
    <select id="goodsData" resultType="com.douzone.final_backend.Bean.GoodsBean">
        select *
        from goods
        where g_code = #{r_g_code}
    </select>

    <!-- 예약 검색 예약 상태 선택 시 -->
    <select id="searchReserve" resultType="com.douzone.final_backend.DTO.ReserveDTO">
        select r.r_code,
               r.r_u_id,
               r.r_count,
               r.r_firstTime,
               r.r_g_code,
               r.r_status,
               r.r_customOrder,
               g.g_name,
               g.g_price,
               g.g_discount,
               g.g_expireDate,
               g.g_category,
               g.g_status,
               g.g_count
        from reserve as r
                 join goods as g
        where g.g_category LIKE '%${g_category}%'
          and r.r_status = #{r_status}
          and g.g_name LIKE '%${searchInput}%'
          and r.r_owner = #{r_owner}
          and g_code = r.r_g_code
        group by r.r_code;
    </select>
    <!-- 예약 검색 상태 선택 안했을 때  -->
    <select id="searchReserveStatus" resultType="com.douzone.final_backend.DTO.ReserveDTO">
        select r.r_code,
               r.r_u_id,
               r.r_count,
               r.r_firstTime,
               r.r_g_code,
               r.r_status,
               r.r_customOrder,
               g.g_name,
               g.g_price,
               g.g_discount,
               g.g_expireDate,
               g.g_category,
               g.g_status,
               g.g_count
        from reserve as r
                 join goods as g
        where g.g_category LIKE '%${g_category}%'
          and g.g_name LIKE '%${searchInput}%'
          and r.r_owner = #{r_owner}
          and g_code = r.r_g_code
        group by r.r_code;
    </select>

    <!-- 상품검색에서 상태 선택 안했을 때 -->
    <select id="search" resultType="com.douzone.final_backend.DTO.GoodsDTO">
        select *
        from goods
        where g_category LIKE '%${g_category}%'
          AND g_name LIKE '%${searchInput}%'
          AND g_owner = #{g_owner}
    </select>

    <!-- 상품검색에서 상태 선택 했을 때 -->
    <select id="searchStatus" resultType="com.douzone.final_backend.DTO.GoodsDTO">
        select *
        from goods
        where g_category LIKE '%${g_category}%'
          AND g_name LIKE '%${searchInput}%'
          AND g_status = #{g_status}
          AND g_owner = #{g_owner}
    </select>
    <select id="getOwner" resultType="com.douzone.final_backend.Bean.OwnerBean">
        select *
        from owner
        where o_sNumber = #{o_sNumber}
    </select>
    <select id="total" resultType="int">
        select ifnull(sum(r_pay),0)
        from reserve
        where r_status = 3
          and r_owner = #{o_sNumber}
    </select>
    <select id="goods" resultType="int">
        select count(*)
        from goods
        where g_owner = #{o_sNumber}
    </select>
    <select id="reserve" resultType="int">
        select count(*)
        from reserve
        where r_owner = #{o_sNumber}
          and r_status = 1
    </select>

    <!-- 판매 중지 됐을 때 예약중인거 예약 거절로 변경 -->
    <update id="deleteStatus" parameterType="int">
        update reserve
        set r_status = 2
        where r_g_code = #{g_code}
    </update>
</mapper>